// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.2
// source: meta_egg_layout_error.proto

package meta_egg_layout

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrCode int32

const (
	// OK is returned on success.
	ErrCode_Ok ErrCode = 0 // 成功
	// Unknown error. An example of where this error may be returned is
	// if a Status value received from another address space belongs to
	// an error-space that is not known in this address space. Also
	// errors raised by APIs that do not return enough error information
	// may be converted to this error.
	ErrCode_Unknown ErrCode = 2 // 未知错误
	// InvalidArgument indicates client specified an invalid argument.
	// Note that this differs from FailedPrecondition. It indicates arguments
	// that are problematic regardless of the state of the system
	// (e.g., a malformed file name).
	ErrCode_InvalidArgument ErrCode = 3 // 参数错
	// NotFound means some requested entity (e.g., file or directory) was
	// not found.
	ErrCode_NotFound ErrCode = 5 // 实体不存在
	// AlreadyExists means an attempt to create an entity failed because one
	// already exists.
	ErrCode_AlreadyExists ErrCode = 6 // 创建实体时冲突
	// PermissionDenied indicates the caller does not have permission to
	// execute the specified operation. It must not be used for rejections
	// caused by exhausting some resource (use ResourceExhausted
	// instead for those errors). It must not be
	// used if the caller cannot be identified (use Unauthenticated
	// instead for those errors).
	ErrCode_PermissionDenied ErrCode = 7 // 权限不足
	// ResourceExhausted indicates some resource has been exhausted, perhaps
	// a per-user quota, or perhaps the entire file system is out of space.
	ErrCode_ResourceExhausted ErrCode = 8 // 资源不足
	// FailedPrecondition indicates operation was rejected because the
	// system is not in a state required for the operation's execution.
	// For example, directory to be deleted may be non-empty, an rmdir
	// operation is applied to a non-directory, etc.
	//
	// A litmus test that may help a service implementor in deciding
	// between FailedPrecondition, Aborted, and Unavailable:
	//
	//	(a) Use Unavailable if the client can retry just the failing call.
	//	(b) Use Aborted if the client should retry at a higher-level
	//	    (e.g., restarting a read-modify-write sequence).
	//	(c) Use FailedPrecondition if the client should not retry until
	//	    the system state has been explicitly fixed. E.g., if an "rmdir"
	//	    fails because the directory is non-empty, FailedPrecondition
	//	    should be returned since the client should not retry unless
	//	    they have first fixed up the directory by deleting files from it.
	//	(d) Use FailedPrecondition if the client performs conditional
	//	    REST Get/Update/Delete on a resource and the resource on the
	//	    server does not match the condition. E.g., conflicting
	//	    read-modify-write on the same resource.
	ErrCode_FailedPrecondition ErrCode = 9 // 前置条件失败
	// Aborted indicates the operation was aborted, typically due to a
	// concurrency issue like sequencer check failures, transaction aborts,
	// etc.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	ErrCode_Aborted ErrCode = 10 // 操作被中止
	// OutOfRange means operation was attempted past the valid range.
	// E.g., seeking or reading past end of file.
	//
	// Unlike InvalidArgument, this error indicates a problem that may
	// be fixed if the system state changes. For example, a 32-bit file
	// system will generate InvalidArgument if asked to read at an
	// offset that is not in the range [0,2^32-1], but it will generate
	// OutOfRange if asked to read from an offset past the current
	// file size.
	//
	// There is a fair bit of overlap between FailedPrecondition and
	// OutOfRange. We recommend using OutOfRange (the more specific
	// error) when it applies so that callers who are iterating through
	// a space can easily look for an OutOfRange error to detect when
	// they are done.
	ErrCode_OutOfRange ErrCode = 11 // 超出范围
	// Internal errors. Means some invariants expected by underlying
	// system has been broken. If you see one of these errors,
	// something is very broken.
	ErrCode_Internal ErrCode = 13 // 内部错误
	// Unavailable indicates the service is currently unavailable.
	// This is a most likely a transient condition and may be corrected
	// by retrying with a backoff. Note that it is not always safe to retry
	// non-idempotent operations.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	ErrCode_Unavailable ErrCode = 14 // 服务不可用，请重试
	// DataLoss indicates unrecoverable data loss or corruption.
	ErrCode_DataLoss ErrCode = 15 // 数据丢失或损坏
	// Unauthenticated indicates the request does not have valid
	// authentication credentials for the operation.
	ErrCode_Unauthenticated    ErrCode = 16   // 未认证，客户端未提供凭据或提供的凭据无效
	ErrCode_MaxReservedErrCode ErrCode = 1000 // 预留错误码最大值
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:    "Ok",
		2:    "Unknown",
		3:    "InvalidArgument",
		5:    "NotFound",
		6:    "AlreadyExists",
		7:    "PermissionDenied",
		8:    "ResourceExhausted",
		9:    "FailedPrecondition",
		10:   "Aborted",
		11:   "OutOfRange",
		13:   "Internal",
		14:   "Unavailable",
		15:   "DataLoss",
		16:   "Unauthenticated",
		1000: "MaxReservedErrCode",
	}
	ErrCode_value = map[string]int32{
		"Ok":                 0,
		"Unknown":            2,
		"InvalidArgument":    3,
		"NotFound":           5,
		"AlreadyExists":      6,
		"PermissionDenied":   7,
		"ResourceExhausted":  8,
		"FailedPrecondition": 9,
		"Aborted":            10,
		"OutOfRange":         11,
		"Internal":           13,
		"Unavailable":        14,
		"DataLoss":           15,
		"Unauthenticated":    16,
		"MaxReservedErrCode": 1000,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_meta_egg_layout_error_proto_enumTypes[0].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_meta_egg_layout_error_proto_enumTypes[0]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_meta_egg_layout_error_proto_rawDescGZIP(), []int{0}
}

var File_meta_egg_layout_error_proto protoreflect.FileDescriptor

var file_meta_egg_layout_error_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x67, 0x67, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d,
	0x65, 0x74, 0x61, 0x65, 0x67, 0x67, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2a, 0x91, 0x02, 0x0a,
	0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6b, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x05,
	0x12, 0x11, 0x0a, 0x0d, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x10, 0x08,
	0x12, 0x16, 0x0a, 0x12, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x10, 0x0e, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x73, 0x73,
	0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x10, 0x10, 0x12, 0x17, 0x0a, 0x12, 0x4d, 0x61, 0x78, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x10, 0xe8, 0x07,
	0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x65, 0x67, 0x67, 0x5f, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meta_egg_layout_error_proto_rawDescOnce sync.Once
	file_meta_egg_layout_error_proto_rawDescData = file_meta_egg_layout_error_proto_rawDesc
)

func file_meta_egg_layout_error_proto_rawDescGZIP() []byte {
	file_meta_egg_layout_error_proto_rawDescOnce.Do(func() {
		file_meta_egg_layout_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_meta_egg_layout_error_proto_rawDescData)
	})
	return file_meta_egg_layout_error_proto_rawDescData
}

var file_meta_egg_layout_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meta_egg_layout_error_proto_goTypes = []interface{}{
	(ErrCode)(0), // 0: metaegglayout.ErrCode
}
var file_meta_egg_layout_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_meta_egg_layout_error_proto_init() }
func file_meta_egg_layout_error_proto_init() {
	if File_meta_egg_layout_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meta_egg_layout_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_meta_egg_layout_error_proto_goTypes,
		DependencyIndexes: file_meta_egg_layout_error_proto_depIdxs,
		EnumInfos:         file_meta_egg_layout_error_proto_enumTypes,
	}.Build()
	File_meta_egg_layout_error_proto = out.File
	file_meta_egg_layout_error_proto_rawDesc = nil
	file_meta_egg_layout_error_proto_goTypes = nil
	file_meta_egg_layout_error_proto_depIdxs = nil
}
