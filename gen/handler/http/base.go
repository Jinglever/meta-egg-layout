/*
 * Generated by meta-egg.
 * Might be replace after re-generated. DO NOT EDIT!
 * Version: master-7741ad1-dirty
 * Author: meta-egg
 * Generated at: 2023-04-12 23:49
 */
package handler

import (
	api "meta-egg-layout/api/meta_egg_layout"
	"meta-egg-layout/internal/common/cerror"
	"meta-egg-layout/internal/domain"

	"github.com/gin-gonic/gin"
)

type RspBase struct {
	Code    api.ErrCode `json:"code"`
	Message string      `json:"message"`
}

type RspData struct {
	RspBase
	Data interface{} `json:"data"`
}

// data如果为nil, 则响应RspBase{}; 否则响应RspData{}
func ResponseSuccess(c *gin.Context, data interface{}) {
	e := cerror.Ok()
	if data != nil {
		c.JSON(
			e.HttpStatus,
			RspData{
				RspBase: RspBase{
					Code:    e.Code,
					Message: e.Error(),
				},
				Data: data,
			},
		)
	} else {
		c.JSON(
			e.HttpStatus,
			RspBase{
				Code:    e.Code,
				Message: e.Error(),
			},
		)
	}
}

func ResponseFail(c *gin.Context, err error) {
	var (
		cErr *cerror.CustomError
		ok   bool
	)
	if cErr, ok = err.(*cerror.CustomError); !ok {
		cErr = cerror.Unknown(err.Error())
	}
	c.JSON(
		cErr.HttpStatus,
		RspBase{
			Code:    cErr.Code,
			Message: cErr.Error(),
		},
	)
}

type Handler struct {
	DomainUsecase *domain.DomainUsecase
}
