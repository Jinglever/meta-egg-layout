// Code generated by meta-egg. CAREFULLY EDIT.
// WILL NOT BE replace after re-generated, unless you confirm it!
// CAREFULLY EDIT.
// Version: v1.0.1-EE
// Author: meta-egg
// Generated at: 2023-04-16 21:27
package handler

import (
	jgstr "github.com/Jinglever/go-string"
	"github.com/gin-gonic/gin"
	"github.com/sirupsen/logrus"
)

// 用户详情
type UserDetail struct {
	Id        uint64  `json:"id"`         //
	Name      *string `json:"name"`       // 用户名
	Gender    uint64  `json:"gender"`     // 性别
	CreatedBy *uint64 `json:"created_by"` // 创建者
	CreatedAt int64   `json:"created_at"` // 创建时间
	UpdatedBy *uint64 `json:"updated_by"` // 更新者
	UpdatedAt int64   `json:"updated_at"` // 更新时间

}

//	@Id			GetUserDetail
//	@Tags		User
//	@Summary	获取用户详情
//	@Description
//	@Accept		json
//	@Produce	json
//	@Param		Authorization	header		string	true	"Bearer <jwt-token>"
//	@Param		id				path		int		true	"用户ID"
//	@Success	200				{object}	RspData{data=UserDetail}
//	@Failure	400				{object}	RspBase
//	@Router		/v1/users/{id} [get]
func (h *Handler) GetUserDetail(c *gin.Context) {
	id := jgstr.UintVal(c.Param("id"))
	mUser, err := h.DomainUsecase.GetUserByID(c.Request.Context(), id)
	if err != nil {
		logrus.Errorf("domainUsecase.GetUserByID failed, err: %v", err)
		ResponseFail(c, err)
		return
	}
	ResponseSuccess(c, UserDetail{
		Id:        mUser.ID,
		Name:      mUser.Name,
		Gender:    mUser.Gender,
		CreatedBy: mUser.CreatedBy,
		CreatedAt: mUser.CreatedAt.Unix(),
		UpdatedBy: mUser.UpdatedBy,
		UpdatedAt: mUser.UpdatedAt.Unix(),
	})
}
