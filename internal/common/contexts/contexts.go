// Code generated by meta-egg. CAREFULLY EDIT.
// WILL NOT BE replace after re-generated, unless you confirm it!
// CAREFULLY EDIT.
// Version: v1.0.0-EE
// Author: meta-egg
// Generated at: 2023-04-16 18:27
package contexts

import (
	"context"
	"encoding/json"

	"github.com/sirupsen/logrus"
)

type KeyME struct{}

type ME struct {
	ID uint64 `json:"id"` // ID of the user
}

func (me *ME) MustToJSON() string {
	s, err := json.Marshal(me)
	if err != nil {
		logrus.Fatalf("ME.ToJSON Err: %v", err)
	}
	return string(s)
}

func SetME(ctx context.Context, me ME) context.Context {
	return context.WithValue(ctx, KeyME{}, me)
}

func GetME(ctx context.Context) (ME, bool) {
	me, ok := ctx.Value(KeyME{}).(ME)
	return me, ok
}

func DelME(ctx context.Context) context.Context {
	return context.WithValue(ctx, KeyME{}, nil)
}
